let add=(fix
  λa:Nat->Nat->Nat.
    λn:Nat.λm:Nat.
      if (iszero n) then m
      else succ (a (pred n) m)) in
let fib=(fix
  λf:Nat->Nat.
    λx:Nat.
      if (iszero x) then 0
      else if (iszero (pred x)) then (succ 0)
      else add (f (pred x)) (f (pred (pred x)))) in
fib 18